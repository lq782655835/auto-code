{{##def.capitalizeName:{{=it.server.conflict+it.name.charAt(0).toUpperCase()+it.name.slice(1)}}#}}

{{##def.list:get{{#def.capitalizeName}}List#}}
{{##def.detail:get{{#def.capitalizeName}}DetailById#}}
{{##def.del:del{{#def.capitalizeName}}ById#}}
{{##def.create:create{{#def.capitalizeName}}#}}
{{##def.update:update{{#def.capitalizeName}}#}}
<template>
    <u-layout dir="v" class="page-{{=it.name}}">
        {{? it.query}}
        <u-layout dir="h" class="common-query">
            {{~it.query :item}}
                <{{=item.ui}}
                    v-model="condition.{{=item.prop}}"
                    placeholder="{{=item.placeholder}}"
                >
                    {{? item.data}}
                        {{~item.data :optionItem}}
                            <el-option label="{{=optionItem.label}}" value="{{=optionItem.value}}"/>
                        {{~}}
                    {{?}}
                </{{=item.ui}}>
            {{~}}
            <el-button type="primary" @click="refresh" :disabled="loading">查询</el-button>
        </u-layout>
        {{?}}
        {{? it.operation}}
        <u-layout dir="h" class="common-operation">
            {{~it.operation :item}}
            <el-button type="{{=item.color}}" @click="{{=item.event}}" icon="{{=item.icon}}">{{=item.label}}</el-button>
            {{~}}
        </u-layout>
        {{?}}
        <el-table :data="list" border stripe style="width: 98%">
            {{~it.list.tableConfig :item}}
            {{? !item.filter}}
            <el-table-column prop="{{=item.prop}}" label="{{=item.label}}" {{?item.width}}width="{{=item.width}}"{{?}}/>
            {{??}}
            <el-table-column prop="{{=item.prop}}" label="{{=item.label}}" {{?item.width}}width="{{=item.width}}"{{?}}>
                <template slot-scope="scope">
                    {{='{'+'{'+'scope.row.'+item.prop}} | {{=item.filter+'}'+'}'}}
                </template>
            </el-table-column>
            {{?}}
            {{~}}
            <el-table-column label="服务操作" width="150px">
                <template slot-scope="scope">
                    <u-layout gap="s">
                        {{~it.list.operation :link}}
                        <el-link type="{{=link.color}}" @click="{{=link.event}}(scope.row)">{{=link.label}}</el-link>
                        {{~}}
                    </u-layout>
                </template>
            </el-table-column>
        </el-table>
        <el-pagination
            background
            layout="prev, pager, next"
            :page-size="pageSize"
            :current-page.sync="page"
            @current-change="refreshCurrentPage"
            :total="total"
        >
        </el-pagination>
    </u-layout>
</template>

<script lang="ts">
import { Component, Mixins } from 'vue-property-decorator'
import ListMixin from '@/mixins/list'
import { {{#def.list}}, {{#def.del}} } from '@/server'
import ModifyDialog from './dialog'

@Component
export default class {{#def.capitalizeName}} extends Mixins(ListMixin) {
    listService = {{#def.list}}

    condition = {
        {{~it.query :item}}
        {{=item.prop}}: {{=item.defaultValue}},
        {{~}}
    }

    createRow() {
        this.$openDialog(ModifyDialog)().then(() => this.doneSuccessOperation('创建{{=it.cnName}}成功'))
    }

    editRow({ id }) {
        this.$openDialog(ModifyDialog)({id}).then(() => this.doneSuccessOperation('更新{{=it.cnName}}成功'))
    }

    delRow({ id }) {
        {{#def.del}}(id).then(() => this.refreshCurrentPage())
    }
}
</script>

<style lang="scss" scoped></style>
